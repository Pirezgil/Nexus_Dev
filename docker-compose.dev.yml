# Docker Compose - ERP Nexus Development (Production-Ready Security)
# Configuração híbrida: desenvolvimento + segurança de produção

services:
  # Database - PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: nexus-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: nexus_erp
      POSTGRES_USER: nexus_user
      POSTGRES_PASSWORD: nexus_dev_20250905  # Senha fixa para desenvolvimento
      POSTGRES_MULTIPLE_EXTENSIONS: uuid-ossp
      # ⏱️ Política Centralizada de Timeouts
      TIMEOUT_HEALTH_CHECK: 5000
      TIMEOUT_QUICK_OPERATIONS: 10000
      TIMEOUT_INTERNAL_SERVICE: 25000
      TIMEOUT_API_CLIENT: 30000
      TIMEOUT_GATEWAY: 60000
      TIMEOUT_EXTERNAL_API: 60000
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - nexus-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nexus_user -d nexus_erp"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Cache & Message Broker - Redis
  redis:
    image: redis:7-alpine
    container_name: nexus-redis
    restart: unless-stopped
    ports:
      - "6379:6379"  # Exposto para debugging
    volumes:
      - redis_data:/data
    networks:
      - nexus-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 64M
          cpus: '0.1'

  # User Management Service
  user-management:
    image: node:18-alpine
    container_name: nexus-user-management
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DEBUG=nexus:*
      - LOG_LEVEL=debug
      # Configurações híbridas
      - DATABASE_URL=postgresql://nexus_user:nexus_dev_20250905@postgres:5432/nexus_erp
      - JWT_SECRET=nexus-jwt-dev-20250905-super-secure
      - GATEWAY_HMAC_SECRET=nexus-hmac-dev-20250905-inter-service-secure
      - REDIS_URL=redis://redis:6379
    ports:
      - "5003:3000"
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    volumes:
      - ./modules/user-management:/app
      - user_management_node_modules:/app/node_modules
    networks:
      - nexus-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'

  # CRM Service
  crm:
    build:
      context: .
      dockerfile: ./modules/crm/Dockerfile
    container_name: nexus-crm
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DEBUG=nexus:*
      - LOG_LEVEL=debug
      - DATABASE_URL=postgresql://nexus_user:nexus_dev_20250905@postgres:5432/nexus_erp
      - JWT_SECRET=nexus-jwt-dev-20250905-super-secure
      - GATEWAY_HMAC_SECRET=nexus-hmac-dev-20250905-inter-service-secure
      - REDIS_URL=redis://redis:6379
    ports:
      - "5004:3000"
    volumes:
      - ./modules/crm:/app
      - /app/node_modules
    networks:
      - nexus-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      user-management:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'

  # Services Module
  services:
    build:
      context: .
      dockerfile: ./modules/services/Dockerfile
    container_name: nexus-services
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DEBUG=nexus:*
      - LOG_LEVEL=debug
      - DATABASE_URL=postgresql://nexus_user:nexus_dev_20250905@postgres:5432/nexus_erp
      - JWT_SECRET=nexus-jwt-dev-20250905-super-secure
      - GATEWAY_HMAC_SECRET=nexus-hmac-dev-20250905-inter-service-secure
      - REDIS_URL=redis://redis:6379
    ports:
      - "5005:3000"
    volumes:
      - ./modules/services:/app
      - /app/node_modules
    networks:
      - nexus-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      user-management:
        condition: service_healthy
      crm:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'

  # Agendamento Service
  agendamento:
    build:
      context: .
      dockerfile: ./modules/agendamento/Dockerfile
    container_name: nexus-agendamento
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DEBUG=nexus:*
      - LOG_LEVEL=debug
      - DATABASE_URL=postgresql://nexus_user:nexus_dev_20250905@postgres:5432/nexus_erp
      - JWT_SECRET=nexus-jwt-dev-20250905-super-secure
      - GATEWAY_HMAC_SECRET=nexus-hmac-dev-20250905-inter-service-secure
      - REDIS_URL=redis://redis:6379
      # WhatsApp configurações de desenvolvimento
      - WHATSAPP_PHONE_ID=dev_phone_id_123
      - WHATSAPP_ACCESS_TOKEN=dev_token_456
      - WHATSAPP_APP_SECRET=dev_app_secret_789
      - WHATSAPP_WEBHOOK_TOKEN=dev_webhook_012
    ports:
      - "5008:3000"
    volumes:
      - ./modules/agendamento:/app
      - /app/node_modules
    networks:
      - nexus-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      user-management:
        condition: service_healthy
      crm:
        condition: service_healthy
      services:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: ./modules/api-gateway/Dockerfile
    container_name: nexus-api-gateway
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=5001
      - DEBUG=nexus:*
      - LOG_LEVEL=debug
      - DATABASE_URL=postgresql://nexus_user:nexus_dev_20250905@postgres:5432/nexus_erp
      - JWT_SECRET=nexus-jwt-dev-20250905-super-secure
      - GATEWAY_HMAC_SECRET=nexus-hmac-dev-20250905-inter-service-secure
      - REDIS_URL=redis://redis:6379
    ports:
      - "5001:5001"
    volumes:
      - ./modules/api-gateway:/app
      - /app/node_modules
    networks:
      - nexus-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      user-management:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    container_name: nexus-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:5001/api
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - DEBUG=nexus:*
    expose:
      - "3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    networks:
      - nexus-network
    depends_on:
      api-gateway:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    container_name: nexus-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "5000:80"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - nexus-network
    depends_on:
      frontend:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 32M
          cpus: '0.05'

# Networks
networks:
  nexus-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Persistent Volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  frontend_node_modules:
    driver: local