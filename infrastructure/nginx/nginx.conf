events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    # CORS Origin mapping para desenvolvimento
    map $http_origin $cors_origin {
        default "";
        "~^http://localhost:3000$" "http://localhost:3000";
        "~^http://localhost:5000$" "http://localhost:5000";
        "~^http://127.0.0.1:3000$" "http://127.0.0.1:3000"; 
        "~^http://127.0.0.1:5000$" "http://127.0.0.1:5000";
    }

    # Upstream servers - Definidos para os serviços essenciais
    upstream api_gateway {
        server nexus-api-gateway:5001;
        keepalive 32;
    }

    upstream crm {
        server nexus-crm:3000;
        keepalive 32;
    }

    upstream frontend {
        server nexus-frontend:3000;
        keepalive 32;
    }

    server {
        listen 80;
        server_name localhost;

        # Security headers globais
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";

        # CORS headers para desenvolvimento - Origens específicas para segurança
        add_header Access-Control-Allow-Origin $cors_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-Company-ID" always;
        add_header Access-Control-Allow-Credentials "true" always;

        # Handle preflight requests (OPTIONS) - Configuração correta
        location @options {
            add_header Access-Control-Allow-Origin $cors_origin;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-Company-ID";
            add_header Access-Control-Allow-Credentials "true";
            add_header Access-Control-Max-Age 86400;
            return 204;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API routes - TODAS as rotas /api/* centralizadas no API Gateway
        location /api/ {
            # Handle OPTIONS requests
            if ($request_method = OPTIONS) {
                return 204;
            }
            
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://api_gateway/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Forward essential headers for API Gateway
            proxy_pass_header Authorization;
            proxy_pass_header X-Company-ID;
            
            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Next.js static assets (CSS, JS, images) - FOCO PRINCIPAL DO PROBLEMA
        location /_next/static/ {
            proxy_pass http://frontend/_next/static/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache assets estáticos de forma agressiva (são imutáveis com hash)
            expires 1y;
            add_header Cache-Control "public, immutable" always;
        }

        # Next.js webpack HMR e build files
        location /_next/ {
            proxy_pass http://frontend/_next/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Não cachear arquivos de HMR do webpack
            expires off;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        }

        # Frontend application - DEVE SER A ÚLTIMA REGRA para capturar todas as rotas
        location / {
            # Handle OPTIONS requests
            if ($request_method = OPTIONS) {
                return 204;
            }
            
            proxy_pass http://frontend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 600s;
        }
    }
}